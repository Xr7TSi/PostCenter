{"version":3,"sources":["components/Navbar/styles.js","components/Navbar/Navbar.js","components/Posts/Post/styles.js","constants/actionTypes.js","api/index.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/Home/Home.js","components/Auth/icon.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","actions/auth.js","App.js","reducers/posts.js","reducers/auth.js","reducers/index.js","index.js"],"names":["makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","heading","color","textDecoration","image","marginLeft","toolbar","width","profile","userName","brandContainer","purple","palette","getContrastText","deepPurple","backgroundColor","Navbar","classes","useStyles","useState","JSON","parse","localStorage","getItem","user","setUser","dispatch","useDispatch","history","useHistory","location","useLocation","useEffect","logout","token","decode","exp","Date","getTime","AppBar","className","position","Typography","component","Link","to","variant","align","Toolbar","Avatar","alt","result","name","src","imageUrl","charAt","Button","onClick","type","push","media","height","paddingTop","backgroundBlendMode","border","fullHeightCard","card","overlay","top","left","overlay2","right","grid","details","title","cardActions","FETCH_ALL_POSTS","CREATE_POST","UPDATE_POST","DELETE_POST","LIKE_POST","AUTH","LOGOUT","API","axios","create","baseURL","process","interceptors","request","use","req","headers","Authorization","updatePost","id","updatedPost","patch","deletePost","delete","likePost","signIn","formData","post","signUp","Post","setCurrentId","Likes","likes","length","find","like","googleId","_id","fontSize","Card","CardMedia","selectedFile","moment","createdAt","fromNow","creator","style","size","frontSize","tags","map","tag","gutterBottom","CardContent","message","CardActions","disabled","a","api","data","payload","console","log","mainContainer","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","p","Paper","clear","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","Home","get","Grow","in","Container","md","icon","viewBox","fill","d","marginTop","avatar","secondary","main","submit","googleButton","Input","half","autoFocus","handleChange","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","initialState","firstName","lastName","email","password","confirmPassword","Auth","showPassword","setShowPassword","isSignup","setIsSignup","setFormData","googleSuccess","res","profileObj","tokenId","error","maxWidth","elevation","signup","signin","prevShowPassword","clientId","render","renderProps","startIcon","onSuccess","onFailure","cookiePolicy","justify","prevIsSignup","App","path","exact","postActions","action","filter","authReducer","authData","setItem","stringify","combineReducers","auth","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0a3147d9.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 28px',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '150px',\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n \n}));","import React, { useState, useEffect } from 'react'\nimport { AppBar, Typography, Toolbar, Button, Avatar } from '@material-ui/core'\nimport useStyles from './styles.js'\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\n\nconst Navbar = () => {\n\n    const classes = useStyles(); \n    // get profile from local storage, set as user variable.  profile is set in reducers/auth.js\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n\n\n    const logout = () => {\n        dispatch({ type: 'LOGOUT'})\n        // push to homepage after logout\n        history.push('./')\n        // return user to null after logout\n        setUser(null)\n    };\n\n    \n    // used from google OAuth\n    useEffect((logout, user) => {\n        // when there is user.token, set user.token to variable \"token\"\n        const token = user?.token;\n        // setUser to profile data stored in local storage\n\n        // if token is expired, logout\n        if (token) {\n            const decodedToken = decode(token);\n            if(decodedToken.exp * 1000 < new Date().getTime()) {\n                logout();\n            }\n        }\n\n        setUser(JSON.parse(localStorage.getItem('profile')));\n        // when location changes, run this function.  Sign in pushes to ('./') see Auth.js.  Logout pushes to ('./) to refresh page.  see logout function.\n       }, [location]);\n\n    return (\n        <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n            <div className={classes.brandContainer}>\n                <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h3\" align=\"center\">\n                    PostCenter\n                 </Typography>\n            </div>\n            <Toolbar className={classes.toolbar}>\n                {/* if there is a user, show user data.  otherwise, show Sign In link */}\n                { user ? (\n                    <div className={classes.profile}>\n                        <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\n                        {/* <Typography className={classes.userName} variant=\"h6\">{\"Hello \" + user.result.name + \" !\"}</Typography> */}\n                        <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n                    </div>\n                ) : (\n                    <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>                \n                )}\n            </Toolbar>\n      </AppBar>\n    )\n}\n\nexport default Navbar\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});","\n\n// these variables are actions used in src/actions/posts.js.  \n// they could be stored as strings in posts.js but...\n// by storing them as variables, they can generate errors if there are typos.  \n// strings won't generate such errors.   \n\n\nexport const FETCH_ALL_POSTS = 'FETCH_ALL_POSTS';\nexport const CREATE_POST = 'CREATE_POST';\nexport const UPDATE_POST = 'UPDATE_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const LIKE_POST = 'LIKE_POST';\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios';\n\n// use .env files\nconst API = axios.create({ baseURL: process.env.REACT_APP_API_ENDPOINT });\n\n// for dev\n// const API = axios.create({ baseURL: 'http://localhost:5000/api' });\n\n// for production\n// const API = axios.create({ baseURL: '/api' });\n\n// adds function to all requests that includes auth token\nAPI.interceptors.request.use((req) => {\n    // if there is a profile in local storage, add req.headers.Authorization which equals token stored in local storage  \n    if(localStorage.getItem('profile')) {\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`\n    }\n    return req;\n});\n\n\nexport const fetchPosts = () => API.get('/posts');\n\nexport const createPost = (newPost) => API.post('/posts', newPost);\n\n// grabs url plus id parameter to update post\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\n\n// grabs url plus id parameter to delete post\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\n\nexport const signIn = (formData) => API.post('/user/signin', formData)\n\nexport const signUp = (formData) => API.post('/user/signup', formData)\n\n","import React from 'react';\n\n// see more about material-ui components at: https://material-ui.com/\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography  } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { deletePost, likePost } from '../../../actions/posts';\n\n// ({ post }) gets post prop from parent component\nconst Post = ({ post, setCurrentId }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const user = JSON.parse(localStorage.getItem('profile'));\n\n    const Likes = () => {\n        if(post.likes.length > 0) {\n            return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\n            ? (\n                <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length -1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}`}</>\n            ) : (\n                <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n            );\n        }\n\n        return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\n    };\n\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\n            <div className={classes.overlay}>\n                <Typography variant=\"h6\">{post.name}</Typography>\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            {/* three dot (edit) button over image */}\n            {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n            <div className={classes.overlay2}>\n                 {/* onClick setCurrentId is set to equal post._id> */}\n                <Button \n                style={{color: 'white'}} \n                size=\"small\" \n                onClick={() => setCurrentId(post._id)}>\n                    <MoreHorizIcon frontSize=\"default\" />\n                </Button>\n            </div>\n            )}\n\n\n            <div className={classes.details}>\n                {/* map over all tags with #, the tag, then a space */}\n                <Typography variant=\"body2\" color=\"textSecondary\" >{post.tags.map((tag) => `#${tag} `)}</Typography>\n            </div>\n                <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\n            <CardContent> \n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n            </CardContent>\n\n            <CardActions className={classes.cardActions}>\n                <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\n                   <Likes />\n                </Button>\n                {/* is there a user with googleId or _id and they are the post creator?, show delete button */}\n                {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n                     <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\n                     <DeleteIcon fontSize=\"small\" />\n                     &nbsp; Delete\n                 </Button>\n                )}\n               \n            </CardActions>\n\n        </Card>\n    )\n}\n\nexport default Post;\n\n","// the various dispatch actions are stored in src/reducers/posts.js\n// they are resolved to strings in src/constants/actionTypes.js\n\n\nimport { FETCH_ALL_POSTS, CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST  } from '../constants/actionTypes.js';\n// import everything from ../api in one import statement\nimport * as api from '../api/index.js';\n\n// action creators are functions that return an action.\nexport const getPosts = () => async (dispatch) => {\n    try {\n        // pulls data from api (src/sctions/posts.js)\n        const { data } = await api.fetchPosts();\n        // returns data (reducers/posts.js)\n        dispatch({ type: FETCH_ALL_POSTS, payload: data})\n    } catch (error) {\n        console.log('Get Posts ' + error);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post);\n        dispatch({ type: CREATE_POST, payload: data})\n    } catch (error) {\n        console.log('Create Post ' + error);\n    }\n}\n\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n\n        dispatch({ type: UPDATE_POST, payload: data});\n    } catch (error) {\n        console.log('Update Post ' + error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n\n        dispatch({ type: DELETE_POST, payload: id});\n    } catch (error) {\n        console.log('Delete Post ' + error);\n    }\n\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n\n        dispatch({ type: LIKE_POST, payload: data});\n    } catch (error) {\n        console.log('Like Post ' + error);\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    \n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from \"react\";\nimport Post from \"./Post/Post.js\";\nimport useStyles from \"./styles.js\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\n\nconst Posts = ( { setCurrentId }) => {\n  const posts = useSelector((state) => state.posts);\n  const classes = useStyles();\n\n  console.log(posts);\n\n  return (\n    // if no posts.length, show circular progress.  else, show grid of posts\n    !posts.length ? (\n      <CircularProgress />\n    ) : (\n      <Grid\n        className={classes.container}\n        container\n        alignItems=\"stretch\"\n        spacing={3}\n      >\n        {/* map over each of the posts keyed to post._id */}\n        {posts.map((post) => (\n          <Grid key={post._id} item xs={12} sm={6}>\n            {/* send value of post to each Post component */}\n            <Post post={post} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n};\n\nexport default Posts;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n\n\nimport useStyles from \"./styles\";\n\nconst Form = ( { currentId, setCurrentId}) => {\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'))\n\n  // useEffect populates the form with the current post data.  [] is the dependency array-- when post changes, run ueEffect.\n  useEffect(() => {\n    if(post) setPostData(post);\n  }, [post]);\n\n  // handleSubmit function looks for a current id.  if present, will dispatch update post.  otherwise, creates a new post.\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(currentId) {\n      dispatch(updatePost(currentId, {...postData, name: user?.result?.name}));\n    } else{\n      dispatch(createPost( {...postData, name: user?.result?.name} ));\n    }\n    clear();\n  };\n\n  if(!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n          <Typography variant=\"h6\" align=\"center\">\n            Sign in to post!\n          </Typography>\n      </Paper>\n    )\n  }\n\n\n\n  // onClick function for CLEAR button (created below) on e memory form.  sets currentId to null, all fields tp empty strings.\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({ \n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  return (\n    <Paper className={classes.paper} style={{borderRadius: \"0.75rem\"}}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        {/* ternary operator-- if current id, show 'Edit', otherwise 'Create' on the .. a Memory form  */}\n        <Typography variant=\"h6\">{currentId ? 'Edit' : 'Create' } a Post ! </Typography>\n\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n        />\n   \n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\n          />\n        </div>\n\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          // primary color defined by \"@material-ui/core\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          // secondary color defined by \"@material-ui/core\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import React, { useEffect, useState } from 'react'\nimport { Container, Grow, Grid } from \"@material-ui/core\";\nimport Posts from '../Posts/Posts.js';\nimport Form from '../Form/Form.js';\nimport { getPosts } from \"../../actions/posts.js\";\nimport { useDispatch } from \"react-redux\";\n\nconst Home = () => {\n      // useState(null) stats with null if there is no id.\n  const [currentId, setCurrentId] = useState(null);\n  // const classes = useStyles();\n  const dispatch = useDispatch();\n\n  // useEffect will dispatch getPosts when currentID changes, or when any function is dispatched.\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n\n    return (\n        <Grow in>\n        <Container>\n          <Grid\n            // className={classes.mainContainer}\n            container\n            justifyContent=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n             <Grid item xs={12} md={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n            \n            <Grid item xs={12} md={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n           \n          </Grid>\n        </Container>\n      </Grow>\n    )\n}\n\nexport default Home\n","import React from 'react';\n\nconst icon = () => (\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\n    />\n  </svg>\n);\n\nexport default icon;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}));","import React from 'react';\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst  Input = ({ name, label, half, autoFocus, type, handleChange, handleShowPassword }) => {\n    // half prop used to modify size as needed.  if half, 6 equals 12.\n    return (\n        <Grid item xs={12} sm={half ? 6 : 12}>\n            <TextField\n                name={ name }\n                onChange={handleChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                label={label}\n                autoFocus={autoFocus}\n                type={type}\n                InputProps={name === 'password' ? {\n                    endAdornment: (\n                        // InputAdornment provides space for the \"eye\" icon\n                        <InputAdornment position=\"end\">\n                            <IconButton onClick={handleShowPassword}>\n                                {/* toggles icon visibility if there is type password (which is only in the password input on Auth.js) */}\n                                {type === \"password\" ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                } : null}\n            />\n        </Grid>\n    )\n}\n\nexport default  Input\n","import React, { useState } from \"react\";\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Icon from \"./icon.js\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport useStyles from \"./styles.js\";\nimport Input from \"./Input.js\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { signup, signin } from \"../../actions/auth.js\";\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    // e.preventDefault stops browser refresh on form submit, which is the default behavior of the browser.\n    e.preventDefault();\n    if(isSignup) {\n      dispatch(signup(formData, history));\n    } else {\n      dispatch(signin(formData, history));\n    };\n  };\n  const handleChange = (e) => {\n    // setForma data to form Input data\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  // this toggles setShowPassword\n  const handleShowPassword = () =>\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n\n  // this toggles setIsSignup message at bottom of form\n  const switchMode = () => {\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n  };\n\n//   functions for google OAuth\n  const googleSuccess = async (res) => {\n    // profileObj is part of the response from google.  The ? prevents an error if there is no response.\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    \n    \n    try {\n      dispatch({ type: 'AUTH', data: { result, token } });\n      // redirect user to home after login\n      history.push('/')\n    } catch (error) {\n      console.log(error)\n    }\n  };\n\n  const googleFailure = (error) => {\n    console.log(error);\n    console.log(\"Google Sign In failed. Try again later, or sign in with your email and password.\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{isSignup ? \"Sign Up\" : \"Sign In\"}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {/* if isSignup=true display sign up form */}\n            {isSignup && (\n              <>\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n                <Input\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            {/* else, display sign in form */}\n            <Input\n              name=\"email\"\n              label=\"Email\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            {/* if showPassword is true, show text, otherwise, show password.  this allows view to see password at entry */}\n            <Input\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            {/* if isSIgnup, display content below in place of line above. */}\n            {isSignup && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                handleChange={handleChange}\n                type=\"password\"\n              />\n            )}\n          </Grid>\n\n        {/* manual sign in button */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\n          </Button>\n\n        {/* google sign in button */}\n          <GoogleLogin\n            //   client id pulled from google OAuth. console.could.google.com\n            clientId=\"882149642020-ms7okv58002r5p43q1ift36d6djtbd2j.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                color=\"primary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            cookiePolicy={\"single_host_origin\"}\n          />\n\n    \n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                {isSignup\n                  ? \"Already have an account? Sign in\"\n                  : \"Don't have an account? Sign up\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Auth;\n","import { AUTH } from '../constants/actionTypes.js';\n// import everything from ../api in one import statement\nimport * as api from '../api/index.js';\n\nexport const signin = (formData, history) => async (dispatch) => {\n    try {\n        const { data } = await api.signIn(formData);\n\n        dispatch({ type: AUTH, data });\n\n        history.push('/');\n    } catch (error) {\n       console.log(error);\n    }\n};\n\nexport const signup = (formData, history) => async (dispatch) => {\n    try {\n        const { data } = await api.signUp(formData);\n\n        dispatch({ type: AUTH, data });\n        \n        history.push('/');\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n","import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Home from \"./components/Home/Home.js\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Auth from \"./components/Auth/Auth.js\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Container maxWidth=\"lg\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/auth\" exact component={Auth} />\n        </Switch>\n      </Container>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// defines how to handle the array of posts based on each action\n\nimport { FETCH_ALL_POSTS, CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST  } from '../constants/actionTypes.js';\n\nconst postActions = (posts = [], action) => {\n\n  switch (action.type) {\n    \n    case FETCH_ALL_POSTS:\n      return action.payload;\n\n    case CREATE_POST:\n      return [...posts, action.payload];\n\n    case UPDATE_POST:\n      return posts.map((post) => {\n        if (post._id === action.payload._id) {\n          return action.payload;\n        } else {\n          return post;\n        }\n      });\n\n    case DELETE_POST:\n      return posts.filter((post) => post._id !== action.payload);\n\n    case LIKE_POST:\n      return posts.map((post) => {\n        if (post._id === action.payload._id) {\n          return action.payload;\n        } else {\n          return post;\n        }\n      });\n\n    default:\n      return posts;\n  }\n};\n\nexport default postActions;\n","import { AUTH, LOGOUT} from '../constants/actionTypes.js';\n\nconst authReducer = (state = { authData: null}, action) => {\n    switch (action.type) {\n        case AUTH:\n            // set data from google login to local storage\n        localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n        return { ...state, authData: action?.data };\n\n        case LOGOUT: \n        localStorage.clear();\n        // localStorage.removeItem('profile');\n        return { ...state, authData: null };\n\n        default: return state;\n    }\n    }\n\n\nexport default authReducer;","import { combineReducers } from \"redux\";\n\nimport posts from \"./posts\";\nimport auth from \"./auth\";\n\nexport default combineReducers({ posts, auth });\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport './index.css'\n\n\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root'));"],"sourceRoot":""}